{"version":3,"sources":["App.js","index.js"],"names":["App","useState","happiness","text","date","Date","days","setDays","setHappiness","className","map","day","index","style","height","onSubmit","event","preventDefault","console","log","type","min","max","value","onChange","e","target","placeholder","rows","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gNAsEeA,EAtDH,WAAO,IAAD,EACQC,mBAAS,CAC/B,CACEC,UAAW,GACXC,KAAM,KACNC,KAAM,IAAIC,MAEZ,CACEH,UAAW,GACXC,KAAM,KACNC,KAAM,IAAIC,MAEZ,CACEH,UAAW,GACXC,KAAM,KACNC,KAAM,IAAIC,QAfE,mBACTC,EADS,KACHC,EADG,OAkBkBN,mBAAS,IAlB3B,mBAkBTC,EAlBS,KAkBEM,EAlBF,KA0BhB,OACE,sBAAKC,UAAU,MAAf,UACE,oBAAIA,UAAU,UAAd,0BACA,qBAAKA,UAAU,OAAf,SACGH,EAAKI,KAAI,SAACC,EAAKC,GAAN,OACR,qBACEH,UAAU,MAEVI,MAAO,CAAEC,OAAO,GAAD,OAAKH,EAAIT,UAAT,OADVU,QAMX,uBAAMG,SAnBQ,SAACC,GACjBA,EAAMC,iBACNC,QAAQC,IAAI,aAAcjB,GAC1BK,EAAQ,GAAD,mBAAKD,GAAL,CAAWJ,MAgBWO,UAAU,aAArC,UACE,uBACEW,KAAK,QACLC,IAAI,IACJC,IAAI,MACJC,MAAOrB,EACPsB,SAAU,SAACC,GAAD,OAAOjB,EAAaiB,EAAEC,OAAOH,UAEzC,0BAAUI,YAAY,6BAA6BC,KAAK,MACxD,wBAAQR,KAAK,SAAb,+BC5DRS,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.82db019d.chunk.js","sourcesContent":["// TODO: import moment library\n// TODO: after adding new item to the days add date mark\n// TODO: check if the date mark is unique\n// TODO: hide submit log if the user already commited\n// FIXME: fix bug with aligning of bars\n// TODO: add some info what's the purpose of this application\n// TODO: draw an image\n// TODO: make bars clickable\n// => after click show information\n// TODO: save date to localStorage\n// TODO: add gh-pages and publish\n\nimport React, { useState } from \"react\";\n\nimport \"./scsss/main.scss\";\n\nconst App = () => {\n  const [days, setDays] = useState([\n    {\n      happiness: 51,\n      text: \"50\",\n      date: new Date(),\n    },\n    {\n      happiness: 50,\n      text: \"50\",\n      date: new Date(),\n    },\n    {\n      happiness: 49,\n      text: \"50\",\n      date: new Date(),\n    },\n  ]);\n  const [happiness, setHappiness] = useState(75);\n\n  const submitLog = (event) => {\n    event.preventDefault();\n    console.log(\"happiness:\", happiness);\n    setDays([...days, happiness]);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"heading\">Mood Tracker</h1>\n      <div className=\"days\">\n        {days.map((day, index) => (\n          <div\n            className=\"day\"\n            key={index}\n            style={{ height: `${day.happiness}%` }}\n          />\n        ))}\n      </div>\n      {/* TODO: add condition if already logged */}\n      <form onSubmit={submitLog} className=\"submit-log\">\n        <input\n          type=\"range\"\n          min=\"0\"\n          max=\"100\"\n          value={happiness}\n          onChange={(e) => setHappiness(e.target.value)}\n        />\n        <textarea placeholder=\"Add additional information\" rows=\"5\" />\n        <button type=\"submit\">Submit Log</button>\n      </form>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}